Skip to content
Navigation Menu
Chetan-chauhan10
FOCP-2-assign

Type / to search
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
FOCP-2-assign
/
Name your file...
in
main

Edit

Preview
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
#include <iostream>
using namespace std;
int main() {
    int m,n;
    int arr[m][n];

     cin>>m;
     cin>>n;
cout<<"matrix is of size:"<<m<<"X"<< n ;
    return 0;
}
#include <iostream>
using namespace std;
int main() {
    int arr[20];
 for(int i=0;i<=9;i++){       
     cin>>arr[i];
   }
 for(int i=9;i>=0;i--){  

cout<<arr[i]<<endl;
}
    return 0;
}
#include <iostream>
using namespace std;

int main()
{
  int size=0;
    int a[10];

    for(int i=0; i<10;i++) {
    cin>>a[i];
    size++;
    }
      
    for(int i=0; i<10; i++)
    {
        for(int j=i+1; j<10; j++) { 
        if(a[i]>a[j])
            {
                int temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }
   
 
      cout<<" second largest element "<<a[size-2]<<endl;
       cout<<" second smallest element "<<a[1]<<" ";
   return 0;
}
#include <iostream>
using namespace std;

int main() {
    string str;
    
    cout << "Enter sentence: "<<endl;
  
    getline(cin, str);
    
    cout << "You'r entered string: " << str << endl;
    
    return 0;
}

int main() {
    string str;
    cout << "Enter a string: ";
    getline(cin, str);

    string nwstrin = "";
    for (char c : str) {
        if (c != ' ') {
   
            if (c >= 'A' && c <= 'Z') {
            c += 32;
            nwstrin += c;
            }
        }
    }

    int n = nwstr.length();
    bool palindrome = true;
    for (int i = 0; i < n / 2; i++) {
        if (nwstr[i] != nwstr[n - i - 1]) {
            palindrome = false;
            break;
        }
    }

    if (palindrome) {
        cout << "The string is palindrome" << endl;
    } else {
        cout << "The string is not palindrome";
    }

    return 0;
}
#include <iostream>
using namespace std;

int main() {
    string str;
    cout << "Enter string ";
    getline(cin, str);

    int freq[256] = {0}; 

  
    for (int i = 0; i < str.length(); i++) {
        if (str[i] != ' ') 
        freq[str[i]]++;
    }

    for (int i = 0; i < 256; i++) {
        if (freq[i] > 0) {
            cout << char(i) << ": " << freq[i] << endl;
}
}

    return 0;
}
#include <iostream>
using namespace std;

int main() {
    string str;
    cout << "Enter string ";
    getline(cin, str);

    for (int i = 0; i < str.length(); i++) {
        char c = tolower(str[i]); 
        if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
            str[i] = '*'; 
        }
    }

    cout << "new updated string after changes: " << str;

    return 0;
}
#include <iostream>
using namespace std;

int main() {
    int n = 4; 
    int matrix[4][4]; 
    int no = 1; 
    int stRow = 0, edRow = n-1, stCol = 0, edCol = n-1; 
    while (stRow <= edRow && stCol <= edCol) {

        for (int i = stCol; i <= edCol; i++) 
        matrix[stRow][i] = no++;
        stRow++; 
        
        for (int i = stRow; i <= edRow; i++) 
        matrix[i][edCol] = no++;
        edCol--; 
        if (stRow <= edRow) {
            
            for (int i = edCol; i >= stCol; i--) 
            matrix[edRoe][i] = no++;
            edRow--; 
        }
        
        if (stCol <= edCol) {
           
            for (int i = edRow; i >= stRow; i--) 
            matrix[i][stCol] = no++;
            stCol++;
        }
    }

   
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) 
        cout << matrix[i][j] << " ";
       cout<<endl;
    }

    return 0;
}
#include<iostream>
using namespace std;
int main(){
    int n;
    cout<<"Enter the value of n :";
    cin>>n;
    int arr[n][n];
    cout<<endl<<"Enter the elements of "<<n<<"X"<<n<<" matrix\n";
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>arr[i][j];
        }
    }
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            int temp=arr[i][j];
            arr[i][j]=arr[j][i];
            arr[j][i]=temp;
        }
    }
    for(int i=0;i<n;i++){
        int j=0;
        int k=(n-1);
        while(j<k){
            int temp=arr[i][k];
            arr[i][k]=arr[i][j];
            arr[i][j]=temp;
            j++;
            k--;
        }
    }
    cout<<endl<<"THE 90 DEGREE CLOCKWISE ROTATION OF THE GIVEN MATRIX IS : "<<endl<<endl;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
    return 0;
}
#include <iostream>
using namespace std;

bool isPrime(int n) {
    if (n <= 1) return false; 
    for (int i = 2; i * i <= n; ++i) {
        if (n % i == 0) return false;  
    }
    return true;
}

void printFactors(int n) {
    cout << "Factors of " << n << " are: ";
    for (int i = 1; i <= n; ++i) {
        if (n % i == 0) {
            cout << i << " ";
        }
    }
    cout << endl;
}

int nextPrime(int n) {
    int next = n + 1;
    while (!isPrime(next)) {
        next++;
    }
    return next;
}

int main() {
    int n;
 
    cout << "Enter a positive integer: ";
    cin >> n;
 
    if (isPrime(n)) {
        cout << n << " is a prime number." << endl;
        cout << "The next prime number greater than " << n << " is " << nextPrime(n) << "." << endl;
    } else {
        cout << n << " is not a prime number." << endl;
        printFactors(n);  // Find and print all factors
    }

    return 0;
}
New File at / Â· Chetan-chauhan10/FOCP-2-assign
